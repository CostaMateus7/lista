{"ast":null,"code":"var _jsxFileName = \"/home/mateus/Documentos/programacao/treinoReact/To-do-list/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BsPlusSquare, BsPen } from 'react-icons/bs';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [list, setList] = useState(['Fazer comida', 'Ir ao mercado']);\n  const [todo, setTodo] = useState();\n  const [check, setCheck] = useState(false);\n  const handleDeleteTodo = index => {\n    const copyList = [...list];\n    copyList.splice(index, 1);\n    console.log(copyList);\n    setList(copyList);\n  };\n  const handleCheckTodo = index => {\n    this.checked ? j : key;\n  };\n  const handleChange = () => {\n    if (todo.trim() === '') {\n      return;\n    }\n    setList([...list, todo]);\n    setTodo('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => e.preventDefault(),\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"miniContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todo,\n        onChange: e => setTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"plus\",\n        onClick: handleChange,\n        children: /*#__PURE__*/_jsxDEV(BsPlusSquare, {\n          className: \"svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list === null || list === void 0 ? void 0 : list.map((li, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n            // onClick={() => handleCheck(index)}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"s\", {\n            id: index,\n            children: li\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BsPen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AiOutlineDelete, {\n            onClick: () => handleDeleteTodo(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, li, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n// Montar input, title e button para adicionar tarefa;\n// Adicionar tarefa;\n// Terefa devera ter button de delete, check de feito e update;\n// Estratégia: Montar um state list que será um array (push, slice);\n// Tem um map que renderiza os itens do array;\n// Toda vez que um ítem do array for adicionado deverá renderizar novamente;\n// Assim devemos passar um useEffect.\n_s(Main, \"fFowpgsNJqwemTy1R5OII+kFTDc=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","BsPlusSquare","BsPen","AiOutlineDelete","Main","list","setList","todo","setTodo","check","setCheck","handleDeleteTodo","index","copyList","splice","console","log","handleCheckTodo","checked","j","key","handleChange","trim","e","preventDefault","target","value","map","li"],"sources":["/home/mateus/Documentos/programacao/treinoReact/To-do-list/src/components/Main.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BsPlusSquare, BsPen } from 'react-icons/bs';\nimport { AiOutlineDelete } from 'react-icons/ai';\n\nexport default function Main() {\n  const [list, setList] = useState(['Fazer comida', 'Ir ao mercado']);\n  const [todo, setTodo] = useState();\n  const [check, setCheck] = useState(false);\n\n  const handleDeleteTodo = (index) => {\n    const copyList = [...list];\n    copyList.splice(index, 1);\n    console.log(copyList);\n    setList(copyList);\n  };\n\n  const handleCheckTodo = (index) => {\n    this.checked ? j : key;\n  };\n\n  const handleChange = () => {\n    if (todo.trim() === '') {\n      return;\n    }\n    setList([...list, todo]);\n    setTodo('');\n  };\n  return (\n\n    <form onSubmit={(e) => e.preventDefault()} className=\"container\">\n      <h1>Lista de Tarefas</h1>\n      <div className=\"miniContainer\">\n        <input\n          type=\"text\"\n          value={todo}\n          onChange={(e) => setTodo(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n          className=\"plus\"\n          onClick={handleChange}\n        >\n          <BsPlusSquare className=\"svg\" />\n        </button>\n\n      </div>\n      <ul>\n        {list?.map((li, index) => (\n\n          <li key={li}>\n            <div>\n              <input\n                type=\"checkbox\"\n                // onClick={() => handleCheck(index)}\n              />\n              <s id={index}>{li}</s>\n            </div>\n            <div>\n              <BsPen />\n              <AiOutlineDelete onClick={() => handleDeleteTodo(index)} />\n            </div>\n          </li>\n\n        ))}\n      </ul>\n    </form>\n  );\n}\n\n// Montar input, title e button para adicionar tarefa;\n// Adicionar tarefa;\n// Terefa devera ter button de delete, check de feito e update;\n// Estratégia: Montar um state list que será um array (push, slice);\n// Tem um map que renderiza os itens do array;\n// Toda vez que um ítem do array for adicionado deverá renderizar novamente;\n// Assim devemos passar um useEffect.\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,KAAK,QAAQ,gBAAgB;AACpD,SAASC,eAAe,QAAQ,gBAAgB;AAAC;AAEjD,eAAe,SAASC,IAAI,GAAG;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;EACnE,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,EAAE;EAClC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,QAAQ,GAAG,CAAC,GAAGR,IAAI,CAAC;IAC1BQ,QAAQ,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACzBG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBP,OAAO,CAACO,QAAQ,CAAC;EACnB,CAAC;EAED,MAAMI,eAAe,GAAIL,KAAK,IAAK;IACjC,IAAI,CAACM,OAAO,GAAGC,CAAC,GAAGC,GAAG;EACxB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzB,IAAId,IAAI,CAACe,IAAI,EAAE,KAAK,EAAE,EAAE;MACtB;IACF;IACAhB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEE,IAAI,CAAC,CAAC;IACxBC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EACD,oBAEE;IAAM,QAAQ,EAAGe,CAAC,IAAKA,CAAC,CAACC,cAAc,EAAG;IAAC,SAAS,EAAC,WAAW;IAAA,wBAC9D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB,eACzB;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC5B;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEjB,IAAK;QACZ,QAAQ,EAAGgB,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACE,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACzC,eACF;QACE,IAAI,EAAC,QAAQ;QACb,SAAS,EAAC,MAAM;QAChB,OAAO,EAAEL,YAAa;QAAA,uBAEtB,QAAC,YAAY;UAAC,SAAS,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACzB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEL,eACN;MAAA,UACGhB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsB,GAAG,CAAC,CAACC,EAAE,EAAEhB,KAAK,kBAEnB;QAAA,wBACE;UAAA,wBACE;YACE,IAAI,EAAC;YACL;UAAA;YAAA;YAAA;YAAA;UAAA,QACA,eACF;YAAG,EAAE,EAAEA,KAAM;YAAA,UAAEgB;UAAE;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAClB,eACN;UAAA,wBACE,QAAC,KAAK;YAAA;YAAA;YAAA;UAAA,QAAG,eACT,QAAC,eAAe;YAAC,OAAO,EAAE,MAAMjB,gBAAgB,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QACvD;MAAA,GAXCgB,EAAE;QAAA;QAAA;QAAA;MAAA,QAcZ;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GAvEwBxB,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}