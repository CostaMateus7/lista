{"ast":null,"code":"var _jsxFileName = \"/home/mateus/Documentos/programacao/treinoReact/To-do-list/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BsPlusSquare } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [list, setList] = useState(['Fazer comida', 'Ir ao mercado']);\n  const [todo, setTodo] = useState();\n  // useEffect(() => {\n\n  // }, [list]);\n\n  const handleChange = () => {\n    if (todo.trim() === '') {\n      return;\n    }\n    setList([...list, todo]);\n    setTodo('');\n  };\n  // Função trim é para tirar os ESPAÇOS\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"miniContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todo,\n        onChange: e => setTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"plus\",\n        onClick: handleChange,\n        children: /*#__PURE__*/_jsxDEV(BsPlusSquare, {\n          className: \"svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), list === null || list === void 0 ? void 0 : list.map(li => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: li\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, li, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n// Montar input, title e button para adicionar tarefa;\n// Adicionar tarefa;\n// Terefa devera ter button de delete, check de feito e update;\n// Estratégia: Montar um state list que será um array (push, slice);\n// Tem um map que renderiza os itens do array;\n// Toda vez que um ítem do array for adicionado deverá renderizar novamente;\n// Assim devemos passar um useEffect.\n_s(Main, \"A4lV9phEMO3cEAahQJ25EfLZMw4=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","BsPlusSquare","Main","list","setList","todo","setTodo","handleChange","trim","e","target","value","map","li"],"sources":["/home/mateus/Documentos/programacao/treinoReact/To-do-list/src/components/Main.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BsPlusSquare } from 'react-icons/bs';\n\nexport default function Main() {\n  const [list, setList] = useState(['Fazer comida', 'Ir ao mercado']);\n  const [todo, setTodo] = useState();\n  // useEffect(() => {\n\n  // }, [list]);\n\n  const handleChange = () => {\n    if (todo.trim() === '') {\n      return;\n    }\n    setList([...list, todo]);\n    setTodo('');\n  };\n  // Função trim é para tirar os ESPAÇOS\n  return (\n\n    <div className=\"container\">\n      <h1>Lista de Tarefas</h1>\n      <div className=\"miniContainer\">\n        <input\n          type=\"text\"\n          value={todo}\n          onChange={(e) => setTodo(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n          className=\"plus\"\n          onClick={handleChange}\n        >\n          <BsPlusSquare className=\"svg\" />\n        </button>\n\n      </div>\n      {list?.map((li) => (\n        <ul key={li}>\n          <li>{li}</li>\n        </ul>\n      ))}\n\n    </div>\n  );\n}\n\n// Montar input, title e button para adicionar tarefa;\n// Adicionar tarefa;\n// Terefa devera ter button de delete, check de feito e update;\n// Estratégia: Montar um state list que será um array (push, slice);\n// Tem um map que renderiza os itens do array;\n// Toda vez que um ítem do array for adicionado deverá renderizar novamente;\n// Assim devemos passar um useEffect.\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAAC;AAE9C,eAAe,SAASC,IAAI,GAAG;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;EACnE,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,EAAE;EAClC;;EAEA;;EAEA,MAAMO,YAAY,GAAG,MAAM;IACzB,IAAIF,IAAI,CAACG,IAAI,EAAE,KAAK,EAAE,EAAE;MACtB;IACF;IACAJ,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEE,IAAI,CAAC,CAAC;IACxBC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EACD;EACA,oBAEE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB,eACzB;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC5B;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAED,IAAK;QACZ,QAAQ,EAAGI,CAAC,IAAKH,OAAO,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACzC,eACF;QACE,IAAI,EAAC,QAAQ;QACb,SAAS,EAAC,MAAM;QAChB,OAAO,EAAEJ,YAAa;QAAA,uBAEtB,QAAC,YAAY;UAAC,SAAS,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACzB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEL,EACLJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,GAAG,CAAEC,EAAE,iBACZ;MAAA,uBACE;QAAA,UAAKA;MAAE;QAAA;QAAA;QAAA;MAAA;IAAM,GADNA,EAAE;MAAA;MAAA;MAAA;IAAA,QAGZ,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEE;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GAlDwBX,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}